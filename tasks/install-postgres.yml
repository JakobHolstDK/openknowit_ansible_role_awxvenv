- name: "setup-postgress | Stop service postgres, if not stopped"
  ansible.builtin.service:
    name: postgresql 
    state: stopped
    enabled: yes
  become: True   

#ensure postgres is member of the awx group
- name: "setup-postgress | ensure postgres is member of the awx group"
  ansible.builtin.user:
    name: postgres
    groups: awx
    append: yes
  become: True


- name: destroy database
  ansible.builtin.shell:
    cmd: rm -fr  "{{ postgresdata }}"
  become: True

- name: create postgres data dir
  ansible.builtin.file:
    path: "{{ postgresdata }}"
    state: directory
    owner: postgres
    group: postgres
    mode: '0700'
  become: True
  
- name: "are we new"
  find: paths="{{ postgresdata }}" file_type=directory patterns="*"
  register: dir_files
  become: True

- name: "debug | show dir_files"
  debug:
    var: "{{ postgresdata }}"
    


- name:  run initdb
  ansible.builtin.shell:
    cmd: /usr/bin/initdb  -D "{{ postgresdata }}"
  when: dir_files.matched|int == 0
  become: True
  become_user: postgres

- name: Pause for 5 seconds to settle
  pause:
    seconds: 5

- name: Start service postgres, if not started
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: yes
  become: True   

- name:  run  create postgres user
  ansible.builtin.shell:
    cmd: createuser awx
  when: dir_files.matched|int == 0
  become: True
  become_user: postgres

- name: create postgress db
  ansible.builtin.shell:
    cmd: createdb awx -O awx
  when: dir_files.matched|int == 0
  become: True
  become_user: postgres

- name: set password  postgres
  ansible.builtin.shell:
    cmd: psql -c "ALTER USER postgres PASSWORD '{{ postgres_db_password }}';"
  when: dir_files.matched|int == 0
  become: True
  become_user: postgres

- name: set password awx
  ansible.builtin.shell:
    cmd: psql -c "ALTER USER {{ awx_db_user }} PASSWORD '{{ awx_db_password }}';"
  when: dir_files.matched|int == 0
  become: True
  become_user: postgres
  
- name: create postgress access
  ansible.builtin.template:
    src: templates/pg_hba.conf.j2
    dest: "{{ postgresdata }}/pg_hba.conf"
    owner: postgres
    group: postgres
    mode: '0600'
  become: True

- name: Restart service postgres, if not restarted
  ansible.builtin.service:
    name: postgresql
    state: restarted
    enabled: yes
  become: True   

- name: create postgress credentials
  ansible.builtin.template:
    src: templates/credentials.py.j2
    dest: /etc/tower/conf.d/postgres.py
    owner: awx
    group: awx 
    mode: '0600'
  become: True
